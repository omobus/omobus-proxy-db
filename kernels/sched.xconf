<?xml version="1.0" encoding="utf-8" ?>
<kernel module="kern_tasks">
<schedules ontimeout="yes" onsemaphore="yes">
  <![CDATA[
do $$
declare
    weekends int[] 	= array[/*mon:*/0,0,0,0,0,1,/*sun:*/1];
    open_depth int 	= 7;
    close_depth int 	= 1;
    today date 		= current_date;
    u_id uid_t;
    c int;
    d date;
    x date;
    t int;
    rcpt_to emails_t;
    u_lang lang_t;
begin
    /* open new schedules: */
    for u_id in select user_id from users where hidden = 0 and role in ('ise','sv')
    loop
	d := today + open_depth;
	select count(*) from schedules 
	    where user_id = u_id and "monthDate_First"(d)::date_t <= p_date and p_date <= "monthDate_Last"(d)::date_t
	into c;
	if c = 0 then
	    for x in select i::date from generate_series("monthDate_First"(d), "monthDate_Last"(d), '1 day'::interval) i
	    loop
		t := extract(dow from x);
		if t = 0 then
		    t := 7;
		end if;
		if weekends[t] = 0 then
		    insert into schedules(user_id, p_date)
			values(u_id, x);
		    c := c + 1;
		end if;
	    end loop;
	    raise notice 'opened new calendar for: user_id=%, month=%, workdays=%.', 
		u_id, extract(month from d), c;
	end if;
    end loop;

    /* close tasks: */
    update schedules set closed = 1 
	where closed = 0 and p_date <= (today + close_depth)::date_t;

    /* alarms: */
    d := today + close_depth + 1;
    for u_id in 
	select 
	    distinct x.user_id 
	from schedules x
	    left join j_cancellations c on c.route_date = x.p_date and c.user_id = x.user_id and c.hidden = 0
	    left join users u on u.user_id = x.user_id
	    left join sysholidays s on s.h_date = x.p_date and s.country_id = u.country_id and s.hidden = 0
	where 
	    x.p_date = d::date_t and
	    (x.jobs[1]->'type' is null or x.jobs[2]->'type' is null or x.jobs[3]->'type' is null or x.jobs[4]->'type' is null) and
	    x.alarm_ts is null and
	    s.h_date is null and
	    c.route_date is null 
    loop
	select evaddrs, lang_id from users where user_id = u_id
	    into rcpt_to, u_lang;
	perform evmail_add(rcpt_to, u_lang, 'sched/caption', 'sched/body', 1::smallint, array[
	    'date',
	    format('%s %s %s', 
		extract(day from d)::text, 
		"L10n_format_a"(u_lang,'month_name',extract(month from d)::text,'genitive'),
		extract(year from d)::text
	    )
	]);
	update schedules set alarm_ts = current_timestamp where user_id = u_id and p_date = d::date_t;
	raise notice '(head) [user_id=%] => sent alarm at [%].', u_id, d::date_t;
    end loop;
end;
$$
  ]]>
</schedules>
<reminders ontimeout="yes" onsemaphore="yes">
  <![CDATA[
do $$
declare
    today date 		= current_date + 1;
    tomorrow date 	= today + 1;
    u_id uid_t;
    u_name descr_t;
    u_lang lang_t;
    re_id uid_t;
    sd text;
    e_id uid_t;
begin
    create temp table ".t1" (
	f1 uid_t not null,
	f2 uid_t not null,
	primary key(f1, f2)
    ) on commit drop;

    for u_id in select distinct user_id from schedules where "monthDate_First"(today)::date_t <= p_date and p_date <= "monthDate_Last"(today)::date_t
    loop
	for e_id in
	    select jobs[1]->'employee_id' from schedules where user_id = u_id and p_date = tomorrow::date_t and jobs[1]->'type' = 'coaching'
		    union
	    select jobs[2]->'employee_id' from schedules where user_id = u_id and p_date = tomorrow::date_t and jobs[2]->'type' = 'coaching'
		    union
	    select jobs[3]->'employee_id' from schedules where user_id = u_id and p_date = tomorrow::date_t and jobs[3]->'type' = 'coaching'
		    union
	    select jobs[4]->'employee_id' from schedules where user_id = u_id and p_date = tomorrow::date_t and jobs[4]->'type' = 'coaching'
	loop
	    insert into ".t1"(f1, f2) values(u_id, e_id) on conflict do nothing;
	end loop;
    end loop;

    for u_id, e_id in select f1, f2 from ".t1"
    loop
	select descr from users where user_id = e_id
	    into u_name;
	select lang_id from users where user_id = u_id
	    into u_lang;
	sd := format('%s %s %s', 
		extract(day from tomorrow)::text, 
		"L10n_format_a"(u_lang,'month_name',extract(month from tomorrow)::text,'genitive'),
		extract(year from tomorrow)::text
	);

	re_id := md5(format('(head)tommorow_%s_%s_%s',u_id,e_id,tomorrow));

	if (select count(*) from reminders where reminder_id = re_id) = 0 then
	    insert into reminders(reminder_id, subject, body, b_date, e_date, author_id, user_ids)
		values(re_id, 
		    "L10n_format_a"(u_lang,'reminder','','sched/caption'), 
		    "L10n_format_a"(u_lang,'reminder','','sched/coaching:head:tomorrow',array['date',sd,'u_name',u_name]),
		    today::date_t,
		    today::date_t,
		    null,
		    array[u_id::text]
		);
	    raise notice '(head) [user_id=%] => added [tomorrow] reminded [reminder_id=%] at [%].', u_id, re_id, today::date_t;
	end if;

	re_id := md5(format('(head)today_%s_%s_%s',u_id,e_id,today));

	if (select count(*) from reminders where reminder_id = re_id) = 0 then
	    insert into reminders(reminder_id, subject, body, b_date, e_date, author_id, user_ids)
		values(re_id, 
		    "L10n_format_a"(u_lang,'reminder','','sched/caption'), 
		    "L10n_format_a"(u_lang,'reminder','','sched/coaching:head:today',array['date',sd,'u_name',u_name]),
		    tomorrow::date_t,
		    tomorrow::date_t,
		    null,
		    array[u_id::text]
		);
	    raise notice '(head) [user_id=%] => added [today] reminded [reminder_id=%] at [%].', u_id, re_id, tomorrow::date_t;
	end if;
    end loop;

    for u_id, e_id in select f1, f2 from ".t1"
    loop
	select descr from users where user_id = u_id
	    into u_name;
	select lang_id from users where user_id = e_id
	    into u_lang;
	sd := format('%s %s %s', 
		extract(day from tomorrow)::text, 
		"L10n_format_a"(u_lang,'month_name',extract(month from tomorrow)::text,'genitive'),
		extract(year from tomorrow)::text
	);

	re_id := md5(format('(staff)tommorow_%s_%s_%s',e_id,u_id,tomorrow));

	if (select count(*) from reminders where reminder_id = re_id) = 0 then
	    insert into reminders(reminder_id, subject, body, b_date, e_date, author_id, user_ids)
		values(re_id, 
		    "L10n_format_a"(u_lang,'reminder','','sched/caption'), 
		    "L10n_format_a"(u_lang,'reminder','','sched/coaching:staff:tomorrow',array['date',sd,'u_name',u_name]),
		    today::date_t,
		    today::date_t,
		    null,
		    array[e_id::text]
		);
	    raise notice '(staff) [user_id=%] => added [tomorrow] reminded [reminder_id=%] at [%].', e_id, re_id, today::date_t;
	end if;

	re_id := md5(format('(staff)today_%s_%s_%s',e_id,u_id,today));

	if (select count(*) from reminders where reminder_id = re_id) = 0 then
	    insert into reminders(reminder_id, subject, body, b_date, e_date, author_id, user_ids)
		values(re_id, 
		    "L10n_format_a"(u_lang,'reminder','','sched/caption'), 
		    "L10n_format_a"(u_lang,'reminder','','sched/coaching:staff:today',array['date',sd,'u_name',u_name]),
		    tomorrow::date_t,
		    tomorrow::date_t,
		    null,
		    array[e_id::text]
		);
	    raise notice '(staff) [user_id=%] => added [today] reminded [reminder_id=%] at [%].', e_id, re_id, tomorrow::date_t;
	end if;
    end loop;
end;
$$
  ]]>
</reminders>


</kernel>