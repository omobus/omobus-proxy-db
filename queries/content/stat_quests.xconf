<?xml version="1.0" encoding="utf-8" ?>
<stat_quests type="application/json" compress="gz" compress_level="9">
    <queries>
	<L>
  <![CDATA[
select
    x.user_id, 
    u.descr u_name, 
    u.dev_login,
    x.fix_dt,
    x.inserted_ts,
    x.account_id, 
    a.code a_code, 
    a.descr a_name, 
    a.address,
    reg.descr region,
    c.descr city,
    a.rc_id, 
    r.descr rc, 
    r.ka_type,
    p.descr poten,
    a.chan_id, 
    ch.descr chan,
    x.qname_id, 
    n.descr qname,
    x.qrow_id, 
    quest_path(null, z.qname_id, z.pid) qpath, z.descr qrow,
    coalesce(i.descr, x.value) "value",
    u.executivehead_id head_id, ex.descr head_name
from dyn_quests x
    left join quest_names n on n.qname_id = x.qname_id
    left join quest_rows z on z.qname_id = x.qname_id and z.qrow_id = x.qrow_id
    left join quest_items i on i.qname_id = z.qname_id and i.qrow_id = z.qrow_id and z.qtype = 'selector'
    left join accounts a on a.account_id = x.account_id
    left join potentials p on a.poten_id = p.poten_id
    left join channels ch on a.chan_id = ch.chan_id
    left join retail_chains r on a.rc_id = r.rc_id
    left join regions reg on a.region_id = reg.region_id
    left join cities c on a.city_id = c.city_id
    left join users u on u.user_id = x.user_id
    left join users ex on ex.user_id = u.executivehead_id
where '%b_date%'<=x.fix_date and x.fix_date<='%e_date%'
order by x.inserted_ts desc, u.descr, x.doc_id, n.descr, z.row_no, z.descr
  ]]>
	</L>
    </queries>
    <generator>
  <![CDATA[
require('rtlib').main("quests", true)
  ]]>
    </generator>
</stat_quests>