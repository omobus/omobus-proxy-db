<?xml version="1.0" encoding="utf-8"?>
<erp_docs templ="%doc_id%;%erp_id%;%pid%;%erp_no%;%erp_dt%;%amount%;%status%;%doc_type%;">
<verification>
  <![CDATA[
select count(*) from data_stream
    where s_id = '//shadow/%uid%/%pack_code%' and digest = '%pack_digest%'
  ]]>
</verification>
<check_exist>
  <![CDATA[
select count(*) from shadow.erp_docs 
    where erp_id='%erp_id%' and distr_id='%ErpCode%'
  ]]>
</check_exist>
<update>
  <![CDATA[
update shadow.erp_docs set doc_id=NIL('%doc_id%'), amount=%amount%, status=%status%
    where erp_id='%erp_id%' and distr_id='%ErpCode%'
  ]]>
</update>
<insert>
  <![CDATA[
insert into shadow.erp_docs (distr_id, doc_id, erp_id, pid, erp_no, erp_dt, amount, status, doc_type)
    values ('%ErpCode%', NIL('%doc_id%'), '%erp_id%', '%pid%', trim('%erp_no%'), '%erp_dt%', %amount%, %status%, '%doc_type%')
  ]]>
</insert>
<end>
  <![CDATA[
do $$
declare
    d_id uid_t;
    u_id uid_t;
    f_date date_t;
    d_code uid_t;
    ttd j_ttd.status%TYPE;
begin
-- **** shadow.erp_docs --> erp_docs
    delete from erp_docs where doc_id in (select doc_id from shadow.erp_docs where distr_id='%ErpCode%' and doc_id is not null);
    insert into erp_docs(doc_id, erp_id, pid, erp_no, erp_dt, amount, status, doc_type, inserted_ts, updated_ts, db_ids)
	select doc_id, erp_id, pid, erp_no, erp_dt, amount, status, doc_type, inserted_ts, updated_ts, array['$shadow'] from shadow.erp_docs where distr_id='%ErpCode%' and doc_id is not null;

-- **** erp_docs --> content_stream
    for d_code, f_date, u_id in
	select doc_code, left(fix_dt,10), user_id from j_docs where doc_id in (select doc_id from shadow.erp_docs where distr_id='%ErpCode%' and doc_id is not null and updated_ts=current_timestamp)
	    group by doc_code, left(fix_dt,10), user_id
    loop
	if( d_code = 'h_order' ) then
	    insert into ".content"(content_code, user_id, b_date, e_date)
		values('stat_orders', '', "monthDate_First"(f_date)::date_t, "monthDate_Last"(f_date)::date_t)
	    on conflict do nothing;
	elsif( d_code = 'h_reclamation' ) then
	    insert into ".content"(content_code, user_id, b_date, e_date)
		values('stat_reclamations', '', "monthDate_First"(f_date)::date_t, "monthDate_Last"(f_date)::date_t)
	    on conflict do nothing;
	end if;
    end loop;

-- **** erp_docs --> j_ttd, mail_stream
    for d_code, d_id, ttd in
	select j.doc_code, j.doc_id, t.status from j_docs j
	    left join j_ttd t on t.doc_id=j.doc_id
	where j.doc_id in (select doc_id from shadow.erp_docs where distr_id='%ErpCode%' and doc_id is not null and updated_ts=current_timestamp)
	    and (t.status is null or t.status = 'delivered')
    loop
	if( ttd is null ) then
	    insert into j_ttd(doc_id, status) values(d_id, 'accepted');
	else
	    update j_ttd set status = 'accepted' where doc_id = d_id;
	end if;
	if( d_code = 'h_order' ) then
	    perform evmail_add(u_id,'TTD/caption:order','TTD/body:accepted',3::smallint /*normal*/,array['doc_no','%doc_id%',
		'erp_no',(select array_to_string(array_agg(erp_id::varchar),', ') from erp_docs where doc_id=d_id)]);
	elsif( d_code = 'h_reclamation' ) then
	    perform evmail_add(u_id,'TTD/caption:reclamation','TTD/body:accepted',3::smallint /*normal*/,array['doc_no','%doc_id%'
		'erp_no',(select array_to_string(array_agg(erp_id::varchar),', ') from erp_docs where doc_id=d_id)]);
	end if;
    end loop;

-- erp_docs --> data_stream
    perform stor_data_stream('//shadow/%uid%/%pack_code%', '%pack_digest%', '%server_hostname%');
end;
$$;
  ]]>
</end>
</erp_docs>