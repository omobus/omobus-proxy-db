<?xml version="1.0" encoding="utf-8" ?>
<contact>
<check_user>
  <![CDATA[
select user_id as user_id_sys from users 
    where user_id='%ErpId%' /*%user_id%*/
  ]]>
</check_user>
<check_exist>
  <![CDATA[
select count(*) from h_contact 
    where user_id='%user_id_sys%' and dev_pack=%dev_pack% and dev_id='%dev_id%' and fix_dt='%fix_dt%'
  ]]>
</check_exist>
<check_date>
  <![CDATA[
select (current_date - '%fix_dt%'::date) not between -1 and "paramInteger"('gc:keep_alive'::uid_t) banned
  ]]>
</check_date>
<create>
  <![CDATA[
select * from doc_id()
  ]]>
</create>
<write_body>
  <![CDATA[
insert into h_contact(doc_id, doc_no, inserted_node, dev_pack, dev_id, dev_login, fix_dt, doc_note, user_id, w_cookie, a_cookie, activity_type_id, created_dt, created_gps_la, created_gps_lo, created_gps_dt, closed_dt, closed_gps_la, closed_gps_lo, closed_gps_dt, account_id, contact_id, name, surname, patronymic, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, locked, deleted, consent_status, consent_type, consent_size, consent_data, consent_country)
    values('%doc_id_sys%', '%doc_id%', '%server_hostname%', %dev_pack%, '%dev_id%', '%user_id%', '%fix_dt%', NIL('%doc_note%'), '%user_id_sys%', '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%created_dt%', NIL(%created_gps_la%), NIL(%created_gps_lo%), NIL('%created_gps_dt%'), '%closed_dt%', NIL(%closed_gps_la%), NIL(%closed_gps_lo%), NIL('%closed_gps_dt%'), '%account_id%', '%contact_id%', trim('%name%'), NIL(trim('%surname%')), NIL(trim('%patronymic%')), NIL('%job_title_id%'), NIL('%mobile%'), NIL('%email%'), NIL('%spec_id%'), NIL('%cohort_id%'), NIL('%loyalty_level_id%'), NIL('%influence_level_id%'), NIL('%intensity_level_id%'), NIL(%start_year%), "toBoolean"('%locked%'), "toBoolean"('%deleted%'), NIL('%consent_status%'), NIL('%consent_type%'), NIL(%consent_size%), $1:blob, NIL('%consent_country%'))
  ]]>
</write_body>
<close>
  <![CDATA[
do $$
declare
    f_date date_t default left('%fix_dt%', 10);
    f_time time_t default substring('%fix_dt%', 12, 5);
    rec record;
    b blob_t;
begin
-- **** contact --> j_docs
    insert into j_docs(doc_id, doc_no, dev_id, dev_login, user_id, account_id, fix_dt, created_dt, created_gps_dt, created_gps_la, created_gps_lo, closed_dt, closed_gps_dt, closed_gps_la, closed_gps_lo, w_cookie, a_cookie, activity_type_id, inserted_node, dev_pack, doc_code)
	values('%doc_id_sys%', '%doc_id%', '%dev_id%', '%user_id%', '%user_id_sys%', '%account_id%', '%fix_dt%', '%created_dt%', NIL('%created_gps_dt%'), NIL(%created_gps_la%), NIL(%created_gps_lo%), '%closed_dt%', NIL('%closed_gps_dt%'), NIL(%closed_gps_la%), NIL(%closed_gps_lo%), '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%server_hostname%', '%dev_pack%', '%doc_code_sys%');

-- **** contact --> contacts
    if( (select count(*) from contacts where contact_id='%contact_id%') = 0 ) then
	if( (select count(consent_data) from h_contact where doc_id='%doc_id_sys%' and consent_data is not null) > 0 ) then
	    insert into contacts (contact_id, account_id, name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, extra_info, consent_status, consent_type, consent_dt, consent_data, consent_country, author_id, "_dataTimestamp")
		select contact_id, account_id, name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, doc_note, consent_status, consent_type, fix_dt, consent_data, consent_country, user_id, fix_dt from h_contact where doc_id = '%doc_id_sys%';
	else
	    insert into contacts (contact_id, account_id, name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, extra_info, author_id, "_dataTimestamp")
		select contact_id, account_id, name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, doc_note, user_id, fix_dt from h_contact where doc_id = '%doc_id_sys%';
	end if;
    elsif( (select count(*) from contacts where contact_id='%contact_id%' and ("_dataTimestamp" is null or "_dataTimestamp" < '%fix_dt%')) > 0 ) then
	if( (select count(consent_data) from h_contact where doc_id='%doc_id_sys%' and consent_data is not null) > 0 ) then
	    update contacts set (/*account_id,*/ name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, extra_info, consent_status, consent_type, consent_dt, consent_data, consent_country, author_id, locked, hidden, "_dataTimestamp", "_isAlienData", db_ids) = 
		(select /*account_id,*/ name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, doc_note, consent_status, consent_type, fix_dt, consent_data, consent_country, user_id, locked, deleted, fix_dt, 0, null::uids_t from h_contact where doc_id = '%doc_id_sys%')
	    where contact_id='%contact_id%';
	else
	    update contacts set (/*account_id,*/ name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, extra_info, author_id, locked, hidden, "_dataTimestamp", "_isAlienData", db_ids) = 
		(select /*account_id,*/ name, patronymic, surname, job_title_id, mobile, email, spec_id, cohort_id, loyalty_level_id, influence_level_id, intensity_level_id, start_year, doc_note, user_id, locked, deleted, fix_dt, 0, null::uids_t from h_contact where doc_id = '%doc_id_sys%')
	    where contact_id='%contact_id%';
	end if;
    else
	select consent_data from h_contact where doc_id='%doc_id_sys%' and consent_data is not null
	    into b;
	if b is not null then
	    select consent_status, consent_type, fix_dt, consent_data, consent_country from h_contact 
		where contact_id='%contact_id%' and consent_data is not null order by fix_dt desc limit 1
	    into rec;
	    if rec is null or b = rec.consent_data then
		update contacts set (consent_status, consent_type, consent_dt, consent_data, consent_country) = 
		    (rec.consent_status, rec.consent_type, rec.fix_dt, rec.consent_data, rec.consent_country)
		where contact_id='%contact_id%';
	    else
		/* !!!! doc_id='%doc_id_sys%' consent doesn't loggend into the logs.consents table and this is correct !!!! */
		raise notice '(contact) updating contact parameters [contact_id=%contact_id%, doc_id=%doc_id_sys%] was ignored.';
	    end if;
	else
	    raise notice '(contact) updating contact parameters [contact_id=%contact_id%, doc_id=%doc_id_sys%] was ignored.';
	end if;
    end if;

-- **** contact --> sysstats
    perform sysstat_add('%user_id_sys%', f_date, f_time);

-- **** contact --> sysdevices
    update sysdevices set outdated_ts = current_timestamp
	where dev_id = '%dev_id%' and dev_login = '%user_id%' and user_id = '%user_id_sys%';

-- **** contact --> content_stream
    perform content_add('tech_route', '%user_id_sys%', f_date, f_date);
    perform content_add('a_list', '%user_id_sys%', f_date, f_date);
end;
$$;
  ]]>
</close>
<log>
  <![CDATA[
insert into pack_stream (pack_code, pack_name, pack_size, inserted_node, inserted_svc, vstamp, dev_pack, dev_id, dev_login, user_id, fix_dt, status, obj_id)
    values('%doc_code_sys%', '%doc_name_sys%', %doc_size_sys%, '%server_hostname%', 'docs', '%vstamp%', %dev_pack%, '%dev_id%', '%user_id%', NIL('%user_id_sys%'), '%fix_dt%', '%doc_status_sys%', NIL('%doc_id_sys%'))
  ]]>
</log>
</contact>