<?xml version="1.0" encoding="utf-8" ?>
<shelf>
<check_user>
  <![CDATA[
select user_id as user_id_sys from users 
    where lower(user_id)=lower('%ErpId%') /*%user_id%*/
  ]]>
</check_user>
<check_exist>
  <![CDATA[
select count(*) from h_shelf 
    where user_id='%user_id_sys%' and dev_pack=%dev_pack% and dev_id='%dev_id%' and fix_dt='%fix_dt%'
  ]]>
</check_exist>
<check_date>
  <![CDATA[
select (current_date - '%fix_dt%'::date) not between -1 and "paramInteger"('gc:keep_alive'::uid_t) banned
  ]]>
</check_date>
<create>
  <![CDATA[
select * from doc_id()
  ]]>
</create>
<write_body>
  <![CDATA[ 
insert into h_shelf(doc_id, doc_no, inserted_node, dev_pack, dev_id, dev_login, fix_dt, user_id, w_cookie, a_cookie, activity_type_id, account_id, created_dt, created_gps_la, created_gps_lo, created_gps_dt, closed_dt, closed_gps_la, closed_gps_lo, closed_gps_dt, rows, blobs, categ_id, sos_target, soa_target, sos, soa)
    values('%doc_id_sys%', '%doc_id%', '%server_hostname%', %dev_pack%, '%dev_id%', '%user_id%', '%fix_dt%', '%user_id_sys%', '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%account_id%', '%created_dt%', NIL(%created_gps_la%), NIL(%created_gps_lo%), NIL('%created_gps_dt%'), '%closed_dt%', NIL(%closed_gps_la%), NIL(%closed_gps_lo%), NIL('%closed_gps_dt%'), %rows%, %blobs%, '%categ_id%', NIL(%sos_target%), NIL(%soa_target%), NIL(%sos%), NIL(%soa%))
  ]]>
</write_body>
<write_row>
  <![CDATA[
insert into t_shelf(doc_id, row_no, brand_id, facing, assortment)
    values('%doc_id_sys%', %row_no%, '%brand_id%', case when NIL(%sos%) is null then null else %facing% end, case when NIL(%soa%) is null then null else %assortment% end)
  ]]>
</write_row>
<write_blob>
  <![CDATA[
update h_shelf set photos=array_append(photos::OID[], $1:blob::OID) 
    where doc_id='%doc_id_sys%'
  ]]>
</write_blob>
<close>
  <![CDATA[
do $$
declare
    f_date date_t default left('%fix_dt%', 10);
    f_time time_t default substring('%fix_dt%', 12, 5);
    x datetime_t;
    u_name descr_t;
    u_lang lang_t;
begin
-- **** shelf --> j_docs
    insert into j_docs(doc_id, doc_no, dev_id, dev_login, user_id, account_id, fix_dt, created_dt, created_gps_dt, created_gps_la, created_gps_lo, closed_dt, closed_gps_dt, closed_gps_la, closed_gps_lo, w_cookie, a_cookie, activity_type_id, inserted_node, dev_pack, doc_code)
	values('%doc_id_sys%', '%doc_id%', '%dev_id%', '%user_id%', '%user_id_sys%', '%account_id%', '%fix_dt%', '%created_dt%', NIL('%created_gps_dt%'), NIL(%created_gps_la%), NIL(%created_gps_lo%), '%closed_dt%', NIL('%closed_gps_dt%'), NIL(%closed_gps_la%), NIL(%closed_gps_lo%), '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%server_hostname%', '%dev_pack%', '%doc_code_sys%');

-- **** shelf --> sysstats
    perform sysstat_add('%user_id_sys%', f_date, f_time);

-- **** shelf --> sysdevices
    update sysdevices set outdated_ts = current_timestamp
	where dev_id = '%dev_id%' and dev_login = '%user_id%' and user_id = '%user_id_sys%';

-- **** shelf --> thumbnail_stream
    insert into thumbnail_stream(photo)
	select unnest(photos) from h_shelf where doc_id='%doc_id_sys%';

-- **** shelf --> content_stream
    perform content_add('tech_route', '%user_id_sys%', f_date, f_date);
    perform content_add('a_list', '%user_id_sys%', f_date, f_date);
    perform content_add('tech_shelfs', '%user_id_sys%', f_date, f_date);
    perform content_add('stat_shelfs', '', "monthDate_First"(f_date)::date_t, "monthDate_Last"(f_date)::date_t);

-- **** shelf --> dyn_shelfs, targets
    select fix_dt from dyn_shelfs where account_id = '%account_id%' and fix_date = f_date and categ_id = '%categ_id%' order by fix_dt desc limit 1
	into x;
    if( x is null or '%fix_dt%' > x) then
	/* removes obsolete entires */
	delete from dyn_shelfs where account_id = '%account_id%' and fix_date = f_date and categ_id = '%categ_id%';
	/* recompiles data */
	insert into dyn_shelfs(fix_date, account_id, categ_id, brand_id, facing, assortment, sos_target, soa_target, sos, soa, photos, fix_dt, user_id, doc_id)
	    select f_date, h.account_id, h.categ_id, t.brand_id, t.facing, t.assortment, h.sos_target, h.soa_target, h.sos, h.soa, h.photos, h.fix_dt, h.user_id, h.doc_id from h_shelf h
		left join t_shelf t on t.doc_id=h.doc_id
	    where h.doc_id='%doc_id_sys%';

	if( f_date >= (select max(fix_dt::date_t) from h_shelf where account_id='%account_id%' and categ_id = '%categ_id%' group by account_id) ) then
	    update dyn_shelfs set "_isRecentData" = null where account_id='%account_id%' /*and categ_id = '%categ_id%'*/ and "_isRecentData" = 1;
	    update dyn_shelfs set "_isRecentData" = 1 where account_id='%account_id%' and fix_date=f_date /*and categ_id = '%categ_id%'*/;

	    /* recompiles task: */
	    if( (select count(*) from users where user_id='%user_id_sys%' and role in ('asm','kam','ise','sv')) > 0 ) then
		update targets set hidden=1 where target_id in (
			select doc_id from h_shelf where account_id='%account_id%' and categ_id = '%categ_id%' and left(fix_dt,10)=f_date
		    );
		if( 0%sos% < 0%sos_target% ) then
		    select descr, lang_id from users where user_id='%user_id_sys%'
			into u_name, u_lang;
		    insert into targets(target_id, target_type_id, subject, body, b_date, e_date, author_id, account_ids, "immutable")
			values('%doc_id_sys%', 'target:strict', 
			    (select descr from categories where categ_id='%categ_id%'), 
			    "L10n_format_a"(u_lang,'targets','','shelf',array['u_name',u_name,'fix_date',"L"(f_date),'sos',round(0%sos%*100, 1)::varchar]),
			    current_date, current_date + "paramInteger"('target:depth'), '%user_id_sys%', string_to_array('%account_id%',','), 1);
		end if;
		perform content_add('targets_compliance', '', '', '');
	    end if;
	end if;
    end if;
end;
$$;
  ]]>
</close>
<log>
  <![CDATA[
insert into pack_stream (pack_code, pack_name, pack_size, inserted_node, inserted_svc, vstamp, dev_pack, dev_id, dev_login, user_id, fix_dt, status, obj_id)
    values('%doc_code_sys%', '%doc_name_sys%', %doc_size_sys%, '%server_hostname%', 'docs', '%vstamp%', %dev_pack%, '%dev_id%', '%user_id%', NIL('%user_id_sys%'), '%fix_dt%', '%doc_status_sys%', NIL('%doc_id_sys%'))
  ]]>
</log>
</shelf>