<?xml version="1.0" encoding="utf-8" ?>
<reclamation>
<check_user>
  <![CDATA[
select user_id as user_id_sys from users 
    where user_id='%ErpId%' /*%user_id%*/
  ]]>
</check_user>
<check_exist>
  <![CDATA[
select count(*) from h_reclamation 
    where user_id='%user_id_sys%' and dev_pack=%dev_pack% and dev_id='%dev_id%' and fix_dt='%fix_dt%'
  ]]>
</check_exist>
<check_date>
  <![CDATA[
select (current_date - '%fix_dt%'::date) not between -1 and "paramInteger"('gc:keep_alive'::uid_t) banned
  ]]>
</check_date>
<create>
  <![CDATA[ 
select * from doc_id()
  ]]>
</create>
<write_body>
  <![CDATA[ 
insert into h_reclamation(doc_id, doc_no, inserted_node, dev_pack, dev_id, dev_login, fix_dt, doc_note, user_id, w_cookie, a_cookie, activity_type_id, account_id, created_dt, created_gps_la, created_gps_lo, created_gps_dt, closed_dt, closed_gps_la, closed_gps_lo, closed_gps_dt, rows, distr_id, return_date, amount, weight, volume)
    values('%doc_id_sys%', '%doc_id%', '%server_hostname%', %dev_pack%, '%dev_id%', '%user_id%', '%fix_dt%', '%doc_note%', '%user_id_sys%', '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%account_id%', '%created_dt%', NIL(%created_gps_la%), NIL(%created_gps_lo%), NIL('%created_gps_dt%'), '%closed_dt%', NIL(%closed_gps_la%), NIL(%closed_gps_lo%), NIL('%closed_gps_dt%'), %rows%, '%distr_id%', '%return_date%', %amount%, %weight%, %volume%)
  ]]>
</write_body>
<write_row>
  <![CDATA[ 
insert into t_reclamation(doc_id, row_no, prod_id, reclamation_type_id, pack_id, pack, qty, unit_price, amount, weight, volume)
    values('%doc_id_sys%', %row_no%, '%prod_id%', case '%reclamation_type_id%' when '' then null else '%reclamation_type_id%' end, '%pack_id%', %pack%,  %qty%, %unit_price%, %amount%, %weight%, %volume%)
  ]]>
</write_row>
<close>
  <![CDATA[
do $$
declare
    f_date date_t default left('%fix_dt%', 10);
    f_time time_t default substring('%fix_dt%', 12, 5);
    a_name descr_t;
    a_address address_t;
begin
-- **** reclamation --> j_docs
    insert into j_docs(doc_id, doc_no, dev_id, dev_login, user_id, account_id, fix_dt, created_dt, created_gps_dt, created_gps_la, created_gps_lo, closed_dt, closed_gps_dt, closed_gps_la, closed_gps_lo, w_cookie, a_cookie, activity_type_id, inserted_node, dev_pack, doc_code)
	values('%doc_id_sys%', '%doc_id%', '%dev_id%', '%user_id%', '%user_id_sys%', '%account_id%', '%fix_dt%', '%created_dt%', NIL('%created_gps_dt%'), NIL(%created_gps_la%), NIL(%created_gps_lo%), '%closed_dt%', NIL('%closed_gps_dt%'), NIL(%closed_gps_la%), NIL(%closed_gps_lo%), '%w_cookie%', '%a_cookie%', '%activity_type_id%', '%server_hostname%', '%dev_pack%', '%doc_code_sys%');

-- **** reclamation --> sysstats
    perform sysstat_add('%user_id_sys%', f_date, f_time);

-- **** reclamation --> sysdevices
    update sysdevices set outdated_ts = current_timestamp
	where dev_id = '%dev_id%' and dev_login = '%user_id%' and user_id = '%user_id_sys%';

-- **** reclamation --> content_stream
    perform content_add('tech_route', '%user_id_sys%', f_date, f_date);
    perform content_add('a_list', '%user_id_sys%', f_date, f_date);
    perform content_add('tech_reclamations', '%user_id_sys%', f_date, f_date);
    perform content_add('stat_reclamations', '', "monthDate_First"(f_date)::date_t, "monthDate_Last"(f_date)::date_t);

-- **** reclamation --> spam_stream
    perform streams.spam_add('reclamation_created', hstore('doc_id','%doc_id_sys%'));
end;
$$;
  ]]>
</close>
<log>
  <![CDATA[
insert into pack_stream (pack_code, pack_name, pack_size, inserted_node, inserted_svc, vstamp, dev_pack, dev_id, dev_login, user_id, fix_dt, status, obj_id)
    values('%doc_code_sys%', '%doc_name_sys%', %doc_size_sys%, '%server_hostname%', 'docs', '%vstamp%', %dev_pack%, '%dev_id%', '%user_id%', NIL('%user_id_sys%'), '%fix_dt%', '%doc_status_sys%', NIL('%doc_id_sys%'))
  ]]>
</log>
</reclamation>