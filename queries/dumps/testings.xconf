<?xml version="1.0" encoding="utf-8"?>
<testings templ="%user_id%,%u_name%,%department%,%year%,%month%,%fix_date%,%account_id%,%a_code%,%a_name%,%address%,%retail_chain%,%ka_code%,%a_category%,%channel%,%region%,%city%,%contact_id%,%contact_name%,%sla%,%job_title%,%head_name%,%fix_dt%" empty="no">
  <![CDATA[
select
    d.user_id,
    quote_csv_string(u.descr) u_name, 
    quote_csv_string(i.descr) department,
    left(d.fix_dt, 4) "year", 
    substring(d.fix_dt, 6, 2) "month", 
    left(d.fix_dt, 10) fix_date,
    quote_csv_string(a.account_id) account_id,
    quote_csv_string(a.code) a_code,
    quote_csv_string(a.descr) a_name, 
    quote_csv_string(a.address) address, 
    quote_csv_string(rc.descr) retail_chain, 
    quote_csv_string(rc.ka_code) ka_code,
    quote_csv_string(o.descr) a_category, 
    quote_csv_string(n.descr) channel, 
    quote_csv_string(r.descr) region, 
    quote_csv_string(c.descr) city,
    d.contact_id,
    quote_csv_string(t.name || ' ' || t.surname) contact_name,
    round(100*d.sla,1) sla, 
    quote_csv_string(j.descr) job_title,
    quote_csv_string(e.descr) head_name,
    d.fix_dt
from (
    select distinct on (contact_id, account_id, left(fix_dt,10)) doc_id, user_id, account_id, contact_id, fix_dt, sla from h_testing
	where left(fix_dt,10) >= ("monthDate_First"(current_date - "paramInteger"(case when "paramUID"('dumps:depth') is null then 'gc:keep_alive' else 'dumps:depth' end)))::date_t
    order by contact_id, account_id, left(fix_dt,10), fix_dt desc
) d
    left join users u on u.user_id = d.user_id
    left join departments i on u.dep_ids is not null and cardinality(u.dep_ids) = 1 and i.dep_id = u.dep_ids[1]
    left join users e on e.user_id = u.executivehead_id
    left join accounts a on a.account_id = d.account_id
    left join channels n on n.chan_id = a.chan_id
    left join potentials o on o.poten_id = a.poten_id
    left join retail_chains rc on a.rc_id = rc.rc_id
    left join regions r on a.region_id = r.region_id
    left join cities c on a.city_id = c.city_id
    left join contacts t on t.contact_id = d.contact_id
    left join job_titles j on j.job_title_id = t.job_title_id
order by d.fix_dt desc, u.descr, a.descr, a.address, d.fix_dt
  ]]>
</testings>