<?xml version="1.0" encoding="utf-8"?>
<advt templ="%user_id%,%u_name%,%department%,%year%,%month%,%fix_date%,%account_id%,%a_code%,%a_name%,%address%,%retail_chain%,%ka_code%,%a_category%,%channel%,%region%,%city%,%placement%,%posm_id%,%posm_name%,%brand%,%qty%,%head_name%,%fix_dt%" empty="no">
  <![CDATA[
select
    d.user_id,
    quote_csv_string(u.descr) u_name,
    quote_csv_string(i.descr) department,
    left(d.fix_date, 4) "year",
    substring(d.fix_date, 6, 2) "month",
    d.fix_date,
    quote_csv_string(a.account_id) account_id,
    quote_csv_string(a.code) a_code,
    quote_csv_string(a.descr) a_name,
    quote_csv_string(a.address) address,
    quote_csv_string(rc.descr) retail_chain,
    quote_csv_string(rc.ka_code) ka_code,
    quote_csv_string(o.descr) a_category,
    quote_csv_string(n.descr) channel,
    quote_csv_string(r.descr) region,
    quote_csv_string(c.descr) city,
    quote_csv_string(f.descr) placement,
    quote_csv_string(d.posm_id) posm_id,
    quote_csv_string(p.descr) posm_name,
    quote_csv_string(case when p.brand_ids is null or cardinality(p.brand_ids) = 1 then b.descr else
	(select array_to_string(array_agg(descr::text),', ') from brands where brand_id=any(p.brand_ids)) end) brand,
    d.qty,
    quote_csv_string(e.descr) head_name,
    d.fix_dt
from dyn_advt d
    left join placements f on f.placement_id = d.placement_id
    left join users u on u.user_id = d.user_id
    left join departments i on u.dep_ids is not null and cardinality(u.dep_ids) = 1 and i.dep_id = u.dep_ids[1]
    left join users e on e.user_id = u.executivehead_id
    left join pos_materials p on p.posm_id = d.posm_id
    left join brands b on cardinality(p.brand_ids) = 1 and b.brand_id = p.brand_ids[1]
    left join accounts a on a.account_id = d.account_id
    left join channels n on n.chan_id = a.chan_id
    left join potentials o on o.poten_id = a.poten_id
    left join regions r on r.region_id = a.region_id
    left join cities c on c.city_id = a.city_id
    left join retail_chains rc on rc.rc_id = a.rc_id
where d.fix_date >= ("monthDate_First"(current_date - "paramInteger"(case when "paramUID"('dumps:depth') is null then 'gc:keep_alive' else 'dumps:depth' end)))::date_t
order by d.fix_date desc, a.descr, a.address, p.descr, d.fix_dt
  ]]>
</advt>